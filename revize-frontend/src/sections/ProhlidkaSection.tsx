// src/sections/ProhlidkaSection.tsx

import React, { useContext, ChangeEvent } from "react";
import { RevisionFormContext } from "../context/RevisionFormContext";

const inspectionTasks = [
  "Zp≈Øsob ochrany p≈ôed √∫razem elektrick√Ωm proudem (IEC 60364-4-41)",
  "Protipo≈æ√°rn√≠ p≈ôep√°≈æky a ochrana p≈ôed ≈°√≠≈ôen√≠m ohnƒõ (IEC 60364-4-42, 5-52:2009)",
  "Volba vodiƒç≈Ø dle zat√≠≈æitelnosti a √∫bytku napƒõt√≠ (IEC 60364-4-43, 5-52:2009)",
  "Se≈ô√≠zen√≠ a koordinace ochrann√Ωch p≈ô√≠stroj≈Ø (IEC 60364-5-53:2001)",
  "P≈ôepƒõ≈•ov√© ochrany SPD (IEC 60364-5-53:2001, AMD2:2015)",
  "Odpojovac√≠ a sp√≠nac√≠ p≈ô√≠stroje (IEC 60364-5-53:2001)",
  "Vnƒõj≈°√≠ vlivy a mechanick√° nam√°h√°n√≠ (IEC 60364-4-42:2010, 5-51:2005, 5-52:2009)",
  "Oznaƒçen√≠ vodiƒç≈Ø, v√Ωstra≈æn√© n√°pisy a sch√©mata (IEC 60364-5-51:2005)",
  "Oznaƒçen√≠ obvod≈Ø, svorek atd. (IEC 60364-5-51:2005)",
  "Zakonƒçov√°n√≠ kabel≈Ø a vodiƒç≈Ø (IEC 60364-5-52:2009)"
];

const predefinedDescriptions: Record<string, string> = {
  "Byt": "Byt o velikosti 3+1 se nach√°z√≠ v prvn√≠m pat≈ôe bytov√©ho domu. Elektroinstalace je nap√°jena z elektromƒõrov√©ho rozvadƒõƒçe um√≠stƒõn√©ho v technick√© m√≠stnosti v p≈ô√≠zem√≠. P≈ôipojen√≠ je realizov√°no kabelem CYKY 5x6 mm¬≤. V bytƒõ je instalov√°na bytov√° rozvodnice, ze kter√© jsou nap√°jeny z√°suvkov√© i svƒõteln√© okruhy. Koupelna je vybavena dopl≈àkov√Ωm pospojov√°n√≠m, osvƒõtlen√≠ je ≈ôe≈°eno LED sv√≠tidly. Ve≈°ker√© obvody jsou ji≈°tƒõny proudov√Ωmi chr√°niƒçi s vybavovac√≠m proudem 30 mA.",
  "Rodinn√Ω d≈Øm": "Rodinn√Ω d≈Øm m√° dvƒõ nadzemn√≠ podla≈æ√≠ a je nap√°jen z hlavn√≠ho domovn√≠ho rozvadƒõƒçe, kter√Ω je um√≠stƒõn na fas√°dƒõ objektu. Vnit≈ôn√≠ elektroinstalace je vedena kabely CYKY v PVC chr√°niƒçk√°ch. V ka≈æd√©m podla≈æ√≠ je podru≈æn√° rozvodnice. Ji≈°tƒõn√≠ obvod≈Ø zaji≈°≈•uj√≠ jistiƒçe a proudov√© chr√°niƒçe. Hromosvod je instalov√°n dle ƒåSN EN 62305.",
  "FVE": "Fotovoltaick√° elektr√°rna je instalov√°na na st≈ôe≈°e objektu a p≈ôipojena k distribuƒçn√≠ s√≠ti pomoc√≠ st≈ô√≠daƒçe. DC strana je vedena kabely s dvojitou izolac√≠, p≈ôepƒõ≈•ov√© ochrany jsou instalov√°ny na DC i AC stranƒõ. St≈ô√≠daƒç je uzemnƒõn, v√Ωkon syst√©mu je 5 kWp. Elektrick√° sch√©mata a dokumentace byly dod√°ny.",
  "Wallbox": "Nab√≠jec√≠ stanice pro elektromobil je instalov√°na na vnƒõj≈°√≠ zdi gar√°≈æe a p≈ôipojena k hlavn√≠mu rozvadƒõƒçi samostatn√Ωm kabelem CYKY 5x10 mm¬≤. Ji≈°tƒõn√≠ je provedeno proudov√Ωm chr√°niƒçem typu B. Stanice je osazena p≈ôepƒõ≈•ovou ochranou a byla provedena zkou≈°ka funkce a komunikace s vozidlem.",
  "Spoleƒçn√© prostory": "Spoleƒçn√© prostory v bytov√©m domƒõ zahrnuj√≠ chodby, sklepy a technick√© m√≠stnosti. Osvƒõtlen√≠ je ≈ôe≈°eno pomoc√≠ LED sv√≠tidel s ƒçasov√Ωm sp√≠naƒçem. Rozvodnice jsou oznaƒçeny, kryty svorek jsou zaji≈°tƒõny. V≈°echna kovov√° za≈ô√≠zen√≠ jsou p≈ôipojena na pospojov√°n√≠. Revize se t√Ωkala funkƒçnosti, oznaƒçen√≠ a mechanick√©ho stavu instalace.",
  "Odbƒõrn√© m√≠sto": "Odbƒõrn√© m√≠sto se nach√°z√≠ na ve≈ôejnƒõ p≈ô√≠stupn√©m m√≠stƒõ a je osazeno elektromƒõrov√Ωm rozvadƒõƒçem v plastov√©m proveden√≠ s t≈ô√≠dou kryt√≠ IP44. Vnit≈ôn√≠ propoje byly zkontrolov√°ny, hromadn√© d√°lkov√© ovl√°d√°n√≠ je funkƒçn√≠. Hlavn√≠ jistiƒç odpov√≠d√° velikosti rezervovan√©ho p≈ô√≠konu.",
  "Nebytov√© prostory": "Nebytov√© prostory jsou urƒçeny ke komerƒçn√≠mu vyu≈æit√≠ a elektroinstalace odpov√≠d√° provozn√≠m n√°rok≈Øm. V m√≠stnostech jsou z√°suvkov√© a svƒõteln√© obvody, p≈ôipojen√≠ klimatizace a elektrospot≈ôebiƒç≈Ø. Provedeno kontroln√≠ mƒõ≈ôen√≠ izolaƒçn√≠ho odporu, propojen√≠ pospojov√°n√≠ a zaji≈°tƒõn√≠ oznaƒçen√≠ rozvadƒõƒç≈Ø."
};

export default function ProhlidkaSection() {
  const { form, setForm } = useContext(RevisionFormContext);

  // P≈ôep√≠n√°n√≠ checkbox≈Ø √∫kon≈Ø
  const toggleTask = (task: string) => {
    setForm((f) => {
      const current = f.performedTasks;
      const updated = current.includes(task)
        ? current.filter((t) => t !== task)
        : [...current, task];
      return { ...f, performedTasks: updated };
    });
  };

  // V√Ωbƒõr ≈°ablony popisu
  const handleTemplateSelect = (template: string) => {
    const desc = predefinedDescriptions[template] || "";
    setForm((f) => ({
      ...f,
      inspectionTemplate: template,
      inspectionDescription: desc,
    }));
  };

  // Ruƒçn√≠ zmƒõna popisu
  const onDescriptionChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    const val = e.target.value;
    setForm((f) => ({ ...f, inspectionDescription: val }));
  };

  return (
    <div className="space-y-4 text-sm text-gray-800">
      {/* Proveden√© √∫kony */}
      <div>
        <h2 className="text-lg font-semibold text-blue-800 mb-2">
          ‚úÖ Proveden√© √∫kony
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
          {inspectionTasks.map((task) => (
            <label key={task} className="flex gap-2 items-start">
              <input
                type="checkbox"
                checked={form.performedTasks.includes(task)}
                onChange={() => toggleTask(task)}
                className="accent-blue-600"
              />
              <span>{task}</span>
            </label>
          ))}
        </div>
      </div>

      {/* Popis revidovan√©ho objektu */}
      <div>
        <h2 className="text-lg font-semibold text-blue-800 mb-2">
          üè† Popis revidovan√©ho objektu
        </h2>

        <div className="mb-2">
          <label className="font-medium block mb-1">Vyber vzorov√Ω text:</label>
          <select
            value={form.inspectionTemplate}
            onChange={(e) => handleTemplateSelect(e.target.value)}
            className="border p-2 rounded w-full text-sm"
          >
            <option value="">-- Vyberte mo≈ænost --</option>
            {Object.keys(predefinedDescriptions).map((key) => (
              <option key={key} value={key}>
                {key}
              </option>
            ))}
          </select>
        </div>

        <textarea
          rows={6}
          className="w-full border rounded p-2 text-sm"
          value={form.inspectionDescription}
          onChange={onDescriptionChange}
          placeholder="Popis revidovan√©ho objektu..."
        />
      </div>
    </div>
  );
}
